.boxes {
  display: grid;
  grid-auto-rows: 1fr;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 32px;
}

.box {
  position: relative;
  width: 100%;
  box-shadow: 0 8px 16px rgba(35, 20, 29, .2);
  border-radius: 6px;
  
  &:after {
    content: "";
    display: block;
    padding-bottom: 60%;
  }
}

@function gaydient-rainbow($red: #ff0018, $orange: #ffa52c, $yellow: #ffff41, $green: #008018, $blue: #0000f9, $purple: #86007d, $opacity: 1, $degrees: 90deg, $solid: true) {
  $sections: 6;
  
  @if ($solid) {
    @return linear-gradient($degrees,
      rgba($red, $opacity) 0 #{100% / $sections}, 
      rgba($orange, $opacity) #{100% / $sections} #{100% / $sections * 2},
      rgba($yellow, $opacity) #{100% / $sections * 2} #{100% / $sections * 3},
      rgba($green, $opacity) #{100% / $sections * 3} #{100% / $sections * 4},
      rgba($blue, $opacity) #{100% / $sections * 4} #{100% / $sections * 5},
      rgba($purple, $opacity) #{100% / $sections * 5} 100%
    );
  }

  @return linear-gradient($degrees,
    rgba($red, $opacity), 
    rgba($orange, $opacity), 
    rgba($yellow, $opacity),
    rgba($yellow, $opacity),
    rgba($green, $opacity),
    rgba($blue, $opacity),
    rgba($purple, $opacity)
  );
}

.rainbow {
  background: gaydient-rainbow();
}

.rainbow-gradient {
  background: gaydient-rainbow($solid:false);
}

@function gaydient-trans($blue: #55cdfc, $pink: #f7a8b8, $white: #fff, $opacity: 1, $degrees: 90deg, $chunk: 1) {
  $sections: 5;
  $solidWidth: 100 / $sections * $chunk;
  $gradientWidth: (100 - ($solidWidth * $sections)) / ($sections - 1);

  @return linear-gradient($degrees,   
    rgba($blue, $opacity) 0 #{$solidWidth * 1%},
    rgba($pink, $opacity) #{($solidWidth + $gradientWidth) * 1%} #{($solidWidth * 2 + $gradientWidth) * 1%},
    rgba($white, $opacity) #{($solidWidth * 2 + $gradientWidth * 2) * 1%} #{($solidWidth * 3 + $gradientWidth * 2) * 1%},
    rgba($pink, $opacity) #{($solidWidth * 3 + $gradientWidth * 3) * 1%} #{($solidWidth * 4 + $gradientWidth * 3) * 1%},
    rgba($blue, $opacity) #{($solidWidth * 4 + $gradientWidth * 4) * 1%} 100%
  );
}

.trans {
  background: gaydient-trans();
}

.trans-gradient {
  background: gaydient-trans($chunk: 0);
}

.trans-chunky-gradient {
  background: gaydient-trans($chunk: .5);
}

@function gaydient-enby($yellow: #fff433, $white: #fff, $purple: #9b59d0, $black: #000, $opacity: 1, $degrees: 90deg, $solid: true) {
  $sections: 4;
  
  @if($solid) {
    @return linear-gradient($degrees,   
      rgba($yellow, $opacity) 0 #{100% / $sections}, 
      rgba($white, $opacity) #{100% / $sections} #{100% / $sections * 2},
      rgba($purple, $opacity) #{100% / $sections * 2} #{100% / $sections * 3},
      rgba($black, $opacity) #{100% / $sections * 3} 100%
    );
  }

  @return linear-gradient($degrees,   
    rgba($yellow, $opacity),
    rgba($white, $opacity),
    rgba($purple, $opacity),
    rgba($black, $opacity)
  );
}

.enby {
  background: gaydient-enby();
}

.enby-gradient {
  background: gaydient-enby($solid: false);
}

@function gaydient-genderqueer($lavender: #b77fdd, $white: #fff, $green: #48821e, $opacity: 1, $degrees: 90deg, $solid: true) {
  $sections: 3;
  
  @if($solid) {
    @return linear-gradient($degrees,   
      rgba($lavender, $opacity) 0 #{100% / $sections}, 
      rgba($white, $opacity) #{100% / $sections} #{100% / $sections * 2},
      rgba($green, $opacity) #{100% / $sections * 2} 100%
    );
  }

  @return linear-gradient($degrees,   
    rgba($lavender, $opacity),
    rgba($white, $opacity),
    rgba($green, $opacity)
  );
}

.genderqueer {
  background: gaydient-genderqueer();
}

.genderqueer-gradient {
  background: gaydient-genderqueer($solid: false);
}

@function gaydient-ace($black: #000, $grey: #a4a4a4, $white: #fff, $purple: #810081, $opacity: 1, $degrees: 90deg, $solid: true) {
  $sections: 4;
  
  @if($solid) {
    @return linear-gradient($degrees,   
      rgba($black, $opacity) 0 #{100% / $sections}, 
      rgba($grey, $opacity) #{100% / $sections} #{100% / $sections * 2},
      rgba($white, $opacity) #{100% / $sections * 2} #{100% / $sections * 3},
      rgba($purple, $opacity) #{100% / $sections * 3} 100%
    );
  }

  @return linear-gradient($degrees,   
    rgba($black, $opacity),
    rgba($grey, $opacity),
    rgba($white, $opacity),
    rgba($purple, $opacity)
  );
}

.ace {
  background: gaydient-ace();
}

.ace-gradient {
  background: gaydient-ace($solid: false);
}